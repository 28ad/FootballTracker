//Import AWS
import { SageMakerRuntimeClient, InvokeEndpointCommand } from "@aws-sdk/client-sagemaker-runtime"; 


// Create SageMakerRuntimeClient with region
const client = new SageMakerRuntimeClient({
  region: "us-east-1"
});


const endpointData = {
  "instances":
    [
      {
  "start": "2024-03-08 22:00:00",
  "target": [
      531.493341628014,
      534.705794807773,
      511.670655665114,
      520.496706387323,
      523.728447426016,
      511.078165931277,
      520.47952989566,
      536.422557911085,
      518.94022749787,
      581.637172740522,
      554.782722829547,
      582.993349269132,
      571.988813931819,
      608.549241975521,
      623.263907365492,
      606.706362087103,
      616.140656384545,
      598.157779929198,
      616.035094094524,
      610.943232242122,
      573.040492611432,
      586.262671441027,
      576.011295657786,
      559.531604424332,
      561.287223567096,
      516.273864651638,
      556.834235462714,
      531.186518808272,
      520.076989151773,
      523.07615195625,
      544.846537669235,
      548.578861416006,
      541.951640530088,
      573.109205379039,
      608.59858414427,
      585.452188799685,
      576.572932245593,
      628.750176063573,
      627.954015038583,
      633.173802281596,
      646.328869013101,
      611.567304246442,
      627.815334944382,
      632.877800960489,
      602.461468312363,
      594.125073801144,
      585.371256398427,
      556.337892008283,
      581.402486101656,
      560.019492891338,
      570.398847295395,
      540.540954514145,
      568.99899443479,
      569.545570521148,
      551.285357895123,
      593.983151544671,
      574.967183945972,
      598.917183073878,
      611.584643441936,
      592.426006533538,
      604.822740693397,
      638.520621945981,
      607.996537775168,
      618.537852926214,
      655.30944967892,
      649.650913255577,
      612.073942612873,
      656.745507044374,
      607.229690752514,
      613.659986320549,
      581.12314020559,
      573.737912306357,
      563.707402207583,
      605.525947139955,
      599.043867119558,
      564.582686676954,
      584.256827425575,
      585.138312452248,
      605.865222127537,
      587.803976501148,
      639.343073777596,
      645.652965203086,
      657.276685194788,
      671.688756905825,
      659.959120816905,
      689.219661418517,
      687.531230338667,
      653.113607215218,
      636.7658326161,
      680.617420804838,
      663.496185665491,
      657.042586482602,
      622.684448146891,
      650.458935263559,
      608.829252740712,
      634.926080808771,
      616.305458929489,
      575.2547882079,
      587.769216698393,
      603.868687741962,
      589.975327610044
  ]
}
    ],
    "configuration":
       {
         "num_samples": 50,
          "output_types":["mean","quantiles","samples"],
          "quantiles":["0.1","0.9"]
       }
}



//Calls endpoint and logs results
async function invokeEndpoint () {
    //Create and send command with data
    const command = new InvokeEndpointCommand({
        EndpointName: "SyntheticDataEndpoint",
        Body: JSON.stringify(endpointData),
        ContentType: "application/json",
        Accept: "application/json"
    });
    const response = await client.send(command);

    //Must install @types/node for this to work
    let predictions = JSON.parse(Buffer.from(response.Body).toString('utf8'));
    console.log(predictions);
    console.log(JSON.stringify(predictions));
}

invokeEndpoint();